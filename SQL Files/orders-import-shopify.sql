--CREATE OR REPLACE TABLE `hopeandvintage-389021.orders.orders-junjul23` AS
WITH ALL_ORDRS AS (
  SELECT
    SE.MER_ORDR_ID AS ORDR_ID,
    DATE(DATE_TRUNC(SE.PYMNT_TMS, month)) AS ORDR_MTH,
    SE.PYMNT_TMS AS ORDR_TMS,
    DATE(DATE_TRUNC(SE.FUFL_TMS, month)) AS FUFL_MTH,
    SE.FUFL_TMS,
    SE.CUSTOMER,
    SE.SRCE AS PYMT_SRCE,
    SE.PYMT_MTHD,
    SE.DISC,
    SE.DISC_CDE,
    SE.SUBTOT,
    SE.TAX,
    SE.SHP,
    SE.TOT
  FROM
    `hopeandvintage-389021.raw_exports.orders-shopify-junjul23` SE
  WHERE
    SE.PYMNT_TMS IS NOT NULL
  ORDER BY
    ORDR_ID ASC, SE.PROD_ORDR_TMS ASC
  ),
PROD_INFO AS (
  SELECT
    SE.MER_ORDR_ID AS ORDR_ID,
    SUM(SE.QTY) AS ITEM_CNT,
    SUM(SE.QTY * SE.PRICE) AS PRICE
  FROM
    `hopeandvintage-389021.raw_exports.orders-shopify-junjul23` SE
  GROUP BY
    SE.MER_ORDR_ID 
  ),
COST_INFO AS (
  SELECT
    SP.ORDR_ID,
    SUM(SP.QTY * SP.COST) AS COST
  FROM
    `hopeandvintage-389021.orders.sold-products-junjul23` SP
  GROUP BY
    SP.ORDR_ID
  )
SELECT
  O.ORDR_ID,
  O.ORDR_MTH,
  O.ORDR_TMS,
  O.CUSTOMER,
  O.PYMT_SRCE,
  O.PYMT_MTHD,
  P.ITEM_CNT,
  CAST(P.PRICE AS FLOAT64) AS PRICE,
  O.DISC,
  O.DISC_CDE,
  O.SUBTOT,
  O.TAX,
  O.SHP,
  O.TOT AS NET,
  C.COST,
  O.TOT - C.COST AS GROSS  
FROM
  ALL_ORDRS O
LEFT JOIN
  PROD_INFO P
ON
  O.ORDR_ID = P.ORDR_ID
LEFT JOIN
  COST_INFO C
ON
  O.ORDR_ID = C.ORDR_ID
ORDER BY
  O.ORDR_ID ASC
